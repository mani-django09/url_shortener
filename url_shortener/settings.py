"""
Django settings for url_shortener project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9a%82*#*op7et2#%zfw5659!!=sc1m3o4l+&#w$b%_kosxnh(i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'shortener',
    'rest_framework',
    'django.contrib.sitemaps',
    'django.contrib.humanize',
    'django.contrib.sites',

]
SITE_ID = 1

GOOGLE_ANALYTICS_ID = 'G-FESE6FB3S5'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'shortener.middleware.SecurityMiddleware',  
    'django.middleware.gzip.GZipMiddleware',
    'shortener.middleware.CacheControlMiddleware'
]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

# Static files compression and caching
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'

# Session settings optimization
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'





#GOOGLE_SAFE_BROWSING_KEY = 'AIzaSyCfyoyX1cmmzpNJL_m7OtQF0ra0OwvAhkQ'  # Replace with your actual API key
ROOT_URLCONF = 'url_shortener.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,"templates")],
        'APP_DIRS': False,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'shortener.context_processors.google_analytics',
                'shortener.context_processors.meta_tags',  

            ],
            'loaders': [
                ('django.template.loaders.cached.Loader', [
                    'django.template.loaders.filesystem.Loader',
                    'django.template.loaders.app_directories.Loader',
                ]),
            ],
        },
    },
]

WSGI_APPLICATION = 'url_shortener.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'
USE_TZ = True

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

APPEND_SLASH = False
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Gmail SMTP server
EMAIL_PORT = 587  # Gmail SMTP port
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'manikant007y@gmail.com'  # Your Gmail address
DEFAULT_FROM_EMAIL = 'manikant007y@gmail.com'
EMAIL_HOST_PASSWORD = 'anmw wdqx xdye oxlh'  # Your Gmail app password
#EMAIL_HOST_PASSWORD = 'scqouuyigokzkbmp'  # Your Gmail app password
#EMAIL_HOST_PASSWORD = 'vzcqzihkuoyfygof'    # Your Gmail App Password

# Additional settings
ADMIN_EMAIL = 'manikant007y@gmail.com'  # Email where you want to receive contact form messages
CONTACT_FORM_RECIPIENTS = ['manikant007y@gmail.com']


EMAIL_TIMEOUT = 30  # Timeout in seconds
EMAIL_SSL_CERTFILE = None
EMAIL_SSL_KEYFILE = None

EMAIL_USE_SSL = False  # Don't use both TLS and SSL
SMTP_SSL_CIPHERS = 'TLS_AES_256_GCM_SHA384'
from dotenv import load_dotenv

load_dotenv()


SAFE_BROWSING_API_KEY = os.getenv('SAFE_BROWSING_API_KEY')
SAFE_BROWSING_CLIENT_ID = 'your-url-shortener'  # Identify your application
SAFE_BROWSING_CLIENT_VERSION = '1.0'

# Safe Browsing API Settings
SAFE_BROWSING_CONFIG = {
    'API_ENDPOINT': 'https://safebrowsing.googleapis.com/v4/threatMatches:find',
    'THREAT_TYPES': [
        'MALWARE',
        'SOCIAL_ENGINEERING',
        'UNWANTED_SOFTWARE',
        'POTENTIALLY_HARMFUL_APPLICATION'
    ],
    'PLATFORM_TYPES': ['ANY_PLATFORM'],
    'THREAT_ENTRY_TYPES': ['URL'],
    'MAX_CACHE_TIME': 3600,  # Cache results for 1 hour
    'REQUEST_TIMEOUT': 10,   # Timeout in seconds
}

# Rate Limiting
SAFE_BROWSING_RATE_LIMIT = {
    'MAX_REQUESTS_PER_DAY': 10000,  # Adjust based on your API quota
    'MAX_REQUESTS_PER_MINUTE': 500
}
